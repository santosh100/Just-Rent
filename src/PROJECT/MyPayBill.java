package PROJECT;

import com.sun.glass.events.KeyEvent;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user1
 */
public class MyPayBill extends javax.swing.JInternalFrame {

    private PreparedStatement pstmt;
    private ResultSet rs;
    private DefaultTableModel model = new DefaultTableModel();
    static int BOOKED_ID;

    public MyPayBill() {

        initComponents();
//        snameTextField.requestFocusInWindow();        
        addRecordIntoTable();       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        genderTextField = new javax.swing.JTextField();
        mobnoTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addTextArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        roomchargeTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        servicechargeTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        totalamtTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        advancepaidTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(1385, 700));

        jPanel4.setBackground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PAYMENT / BILL");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel3.setText("Full Name");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel4.setText("Gender");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel6.setText("ID");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel10.setText("Mobile No.");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel12.setText("Address");

        idTextField.setEditable(false);
        idTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        nameTextField.setEditable(false);
        nameTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        genderTextField.setEditable(false);
        genderTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        mobnoTextField.setEditable(false);
        mobnoTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        addTextArea.setEditable(false);
        addTextArea.setColumns(20);
        addTextArea.setLineWrap(true);
        addTextArea.setRows(5);
        jScrollPane1.setViewportView(addTextArea);

        saveButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        saveButton.setText("PAY");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel11.setText("Room Charge");

        roomchargeTextField.setEditable(false);
        roomchargeTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel13.setText("Service Charge");

        servicechargeTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        servicechargeTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        servicechargeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                servicechargeTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                servicechargeTextFieldKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel14.setText("Total Amt");

        totalamtTextField.setEditable(false);
        totalamtTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel15.setText("Total");

        totalTextField.setEditable(false);
        totalTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel16.setText("Advance paid");

        advancepaidTextField.setEditable(false);
        advancepaidTextField.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(96, 96, 96)
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(roomchargeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(advancepaidTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalamtTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(servicechargeTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel4))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(genderTextField)
                            .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mobnoTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(mobnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(roomchargeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(servicechargeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(advancepaidTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(totalamtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addGap(35, 35, 35))
        );

        jPanel5.setBackground(new java.awt.Color(204, 153, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel8.setText("Enter customer name to search :");

        searchTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        searchTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyTyped(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ROOM NO", "CUSTOMER_ID", "CUSTOMER NAME", "FROM", "TILL", "ADVANCE"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * ******************************************************************************************
     */
    public void addRecordIntoTable() {
        pstmt = null;
        rs = null;
        try {
            String c_name = searchTextField.getText().trim().toUpperCase();
            if (c_name.equalsIgnoreCase("")) {
                String query = "select BOOKING_DETAIL.ROOM_NO,BOOKING_DETAIL.IN_DT,BOOKING_DETAIL.OUT_DT,BOOKING_DETAIL.ADVANCE_PAY,CUSTOMER_DETAIL.C_ID,CUSTOMER_DETAIL.C_NAME from BOOKING_DETAIL,CUSTOMER_DETAIL where BOOKING_DETAIL.C_ID = CUSTOMER_DETAIL.C_ID";
                pstmt = MyLogin.con.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            } else {
                String query = "select BOOKING_DETAIL.ROOM_NO,BOOKING_DETAIL.IN_DT,BOOKING_DETAIL.OUT_DT,BOOKING_DETAIL.ADVANCE_PAY,CUSTOMER_DETAIL.C_ID,CUSTOMER_DETAIL.C_NAME from BOOKING_DETAIL,CUSTOMER_DETAIL where BOOKING_DETAIL.C_ID = CUSTOMER_DETAIL.C_ID and CUSTOMER_DETAIL.C_NAME like '" + c_name + "%'";
                //   pstmt = MyLogin.con.prepareStatement("select * from BOOKING_DETAIL where C_NAME like '" + c_name + "%'", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                pstmt = MyLogin.con.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            }
            rs = pstmt.executeQuery();
            pstmt.clearParameters();

            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
            while (tm.getRowCount() > 0) {
                tm.removeRow(0);
            }
            while (rs.next()) {
                Object kk[] = {rs.getInt("ROOM_NO"), rs.getInt("C_ID"), rs.getString("C_NAME"), rs.getDate("IN_DT"), rs.getDate("OUT_DT"), rs.getInt("ADVANCE_PAY")};
                tm.addRow(kk);
            }
        } catch (Exception e) {
            System.out.println(" Error inside addrecordinto table " + e);
        }
    }

    /**
     * ***************************************************************************************************
     */
    private void clearFields() {
        idTextField.setText("");
        nameTextField.setText("");
        genderTextField.setText("");
        mobnoTextField.setText("");
        addTextArea.setText("");
        roomchargeTextField.setText("");
        servicechargeTextField.setText("");
        totalTextField.setText("");
        advancepaidTextField.setText("");
        totalamtTextField.setText("");
    }

    public int getDifferenceDays(Date d1, Date d2) {
        int daysdiff = 0;
        long diff = d2.getTime() - d1.getTime();
        long diffDays = diff / (24 * 60 * 60 * 1000) + 1;
        daysdiff = (int) diffDays;
        return daysdiff;
    }

    private void calculateDays() {
        PreparedStatement pstmt1;
        ResultSet rs1;
        try {

            pstmt1 = MyLogin.con.prepareStatement("select * from BOOKING_DETAIL where ROOM_NO = ?", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            pstmt1.setInt(1, 1);
            rs1 = pstmt1.executeQuery();
            pstmt1.clearParameters();
            if (rs1.next()) {
                Date dt1 = rs1.getDate("IN_DT");
                Date dt2 = rs1.getDate("OUT_DT");
                int days = getDifferenceDays(dt1, dt2);
                System.out.println("days " + days);
            }
        } catch (Exception e) {
            System.out.println(" Error inside addrecordinto table " + e);
        }
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        if (idTextField.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Select customer from table for payment", "Payment", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                java.util.Date date = new java.util.Date();
                DateFormat df = DateFormat.getDateInstance(DateFormat.MEDIUM, Locale.UK);
                String bill_date = df.format(date);
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int rowIndex = jTable1.getSelectedRow();
                int room_no = Integer.parseInt(model.getValueAt(rowIndex, 0).toString());
                PreparedStatement pstmt1;
                ResultSet rs1;

                pstmt1 = MyLogin.con.prepareStatement("select * from BOOKING_DETAIL where ROOM_NO = " + room_no + "");
                rs1 = pstmt1.executeQuery();
                pstmt1.clearParameters();
                rs1.next();
                System.out.println("hello BEFORE ");
                int booked_id = rs1.getInt("BOOKED_ID");
                System.out.println("hello ");
                String booked_dt = df.format(rs1.getDate("BOOKED_DT"));
                String in_date = df.format(rs1.getDate("IN_DT"));
                String out_date = df.format(rs1.getDate("OUT_DT"));
                int c_id = Integer.parseInt(idTextField.getText().trim());
                int room_charge = Integer.parseInt(roomchargeTextField.getText().trim());
                int service_charge = 0;
                if (!(servicechargeTextField.getText().trim().equalsIgnoreCase(""))) {
                    service_charge = Integer.parseInt(servicechargeTextField.getText().trim());
                }
                int advance_pay = Integer.parseInt(advancepaidTextField.getText().trim());
                int total_paid = Integer.parseInt(totalamtTextField.getText().trim());

                pstmt = MyLogin.con.prepareStatement("insert into HISTORY_CUM_BILL_DETAIL (BILL_DT,BOOKED_ID,C_ID,ROOM_NO,BOOKED_DT,IN_DT,OUT_DT,ROOM_CHARGE,SERVICE_CHARGE,ADVANCE_PAY,TOTAL_PAID) values(?,?,?,?,?,?,?,?,?,?,?)", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                pstmt.setString(1, bill_date);
                pstmt.setInt(2, booked_id);
                pstmt.setInt(3, c_id);
                pstmt.setInt(4, room_no);
                pstmt.setString(5, booked_dt);
                pstmt.setString(6, in_date);
                pstmt.setString(7, out_date);
                pstmt.setInt(8, room_charge);
                pstmt.setInt(9, service_charge);
                pstmt.setInt(10, advance_pay);
                pstmt.setInt(11, total_paid);
                int i = pstmt.executeUpdate();
                pstmt.clearParameters();
                if (i > 0) {
                    PreparedStatement pstmt2 = MyLogin.con.prepareStatement("delete from BOOKING_DETAIL where BOOKED_ID = ?");
                    pstmt2.setInt(1, booked_id);
                    int j = pstmt2.executeUpdate();
                    pstmt2.clearParameters();
                    if (j > 0) {
                        JOptionPane.showMessageDialog(null, "Payment successfull", "PAYMENT", JOptionPane.INFORMATION_MESSAGE);
                        BOOKED_ID = booked_id;
                        try {
                            String query = "SELECT HISTORY_CUM_BILL_DETAIL.BILL_NO, HISTORY_CUM_BILL_DETAIL.BILL_DT, HISTORY_CUM_BILL_DETAIL.BOOKED_ID, HISTORY_CUM_BILL_DETAIL.C_ID, HISTORY_CUM_BILL_DETAIL.ROOM_NO, HISTORY_CUM_BILL_DETAIL.BOOKED_DT, HISTORY_CUM_BILL_DETAIL.IN_DT, HISTORY_CUM_BILL_DETAIL.OUT_DT, HISTORY_CUM_BILL_DETAIL.ROOM_CHARGE, HISTORY_CUM_BILL_DETAIL.SERVICE_CHARGE, HISTORY_CUM_BILL_DETAIL.ADVANCE_PAY, HISTORY_CUM_BILL_DETAIL.TOTAL_PAID, CUSTOMER_DETAIL.C_NAME, CUSTOMER_DETAIL.C_GENDER, CUSTOMER_DETAIL.C_MOB_NO, CUSTOMER_DETAIL.C_ADDRESS, ROOM_DETAIL.ROOM_TYPE FROM (CUSTOMER_DETAIL INNER JOIN HISTORY_CUM_BILL_DETAIL ON CUSTOMER_DETAIL.C_ID = HISTORY_CUM_BILL_DETAIL.C_ID) INNER JOIN ROOM_DETAIL ON HISTORY_CUM_BILL_DETAIL.ROOM_NO = ROOM_DETAIL.ROOM_NO WHERE (((HISTORY_CUM_BILL_DETAIL.BOOKED_ID)= " + BOOKED_ID + "));";
                            GenerateReport ob = new GenerateReport();
                            ob.generateBill(query);
                            BOOKED_ID = 0;
                        } catch (Exception e) {
                            System.out.println("Exception inside report button " + e);
                        }
                        clearFields();
                        addRecordIntoTable();
                    } else {
                        System.out.println("Problem in deletion  in BOOKING_DETAIL TABLE");
                    }
                } else {
                    System.out.println("Problem in insertion data in HISTORY_CUM_BILL_DETAIL TABLE");
                }
            } catch (Exception e) {
                System.out.println("Error " + e);
            }
        }
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param evt
     *
     * @param
     * letters*************************************************************************************
     */
    public void checkLetters(java.awt.event.KeyEvent evt, String letters) {
        char cr = evt.getKeyChar();
        if (!((Character.isLetter(cr)) || (cr == KeyEvent.VK_BACKSPACE) || (cr == KeyEvent.VK_SPACE))) {
            getToolkit().beep();
            evt.consume();
        }
        if (letters.length() > 49) {
            getToolkit().beep();
            evt.consume();
        }
    }

    /**
     * @param evt
     * @param fieldname
     *
     *
     **************************************************************************************
     */
    public void checkNumbers(java.awt.event.KeyEvent evt, javax.swing.JTextField fieldname) {
        char cr = evt.getKeyChar();
        if (!(Character.isDigit(cr) || (cr == KeyEvent.VK_BACKSPACE) || cr == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
        if (fieldname.getText().length() > 9) {
            getToolkit().beep();
            evt.consume();
        }
    }
    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased

        if (searchTextField.getText().trim().toUpperCase().equalsIgnoreCase("")) {
            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
            while (tm.getRowCount() > 0) {
                tm.removeRow(0);
            }
        } else {
            addRecordIntoTable();
        }
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void searchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyTyped
        // TODO add your handling code here:
        checkLetters(evt, searchTextField.getText());
    }//GEN-LAST:event_searchTextFieldKeyTyped

    private void setCharges(int rno, String in_date, String out_date, int advance_pay) {
        PreparedStatement pstmt1;
        ResultSet rs1;
        try {
            pstmt1 = MyLogin.con.prepareStatement("select * from ROOM_DETAIL where ROOM_NO = " + rno + "", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs1 = pstmt1.executeQuery();
            pstmt1.clearParameters();
            if (rs1.next()) {
                Date dt1 = Date.valueOf(in_date);
                Date dt2 = Date.valueOf(out_date);
                int days = getDifferenceDays(dt1, dt2);
                System.out.println("days " + days);
                int price_per_day = rs1.getInt("PRICE");
                System.out.println("PRICE PER DAY " + price_per_day);
                int room_charges = days * price_per_day;
                System.out.println("room charges " + room_charges);
                int service_charges = 0;
                int total = service_charges + room_charges;
                int total_money_to_be_paid = total - advance_pay;
                roomchargeTextField.setText("" + room_charges);
                servicechargeTextField.setText("0");
                totalTextField.setText("" + total);
                advancepaidTextField.setText("" + advance_pay);
                totalamtTextField.setText("" + total_money_to_be_paid);
            }
        } catch (Exception e) {
            System.out.println(" Error inside addrecordinto table " + e);
        }
        //  int getDifferenceDays()

    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rowIndex = jTable1.getSelectedRow();
            if (rowIndex > -1) {

                pstmt = null;
                rs = null;
                try {
                    int cid = Integer.parseInt(model.getValueAt(rowIndex, 1).toString());
                    String query = "select * from CUSTOMER_DETAIL where C_ID = " + cid + "";
                    pstmt = MyLogin.con.prepareStatement(query, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    rs = pstmt.executeQuery();
                    pstmt.clearParameters();
                    if (rs.next()) {
                        idTextField.setText("" + rs.getInt("C_ID"));
                        nameTextField.setText(rs.getString("C_NAME"));
                        genderTextField.setText(rs.getString("C_GENDER"));
                        mobnoTextField.setText(rs.getString("C_MOB_NO"));
                        addTextArea.setText(rs.getString("C_ADDRESS"));
                        int advance_pay = Integer.parseInt(model.getValueAt(rowIndex, 5).toString());
                        setCharges(Integer.parseInt(model.getValueAt(rowIndex, 0).toString()), model.getValueAt(rowIndex, 3).toString(), model.getValueAt(rowIndex, 4).toString(), advance_pay);

                    }
                } catch (Exception e) {
                    System.out.println(" Error inside addrecordinto table " + e);
                }               
            }
        } catch (Exception e) {
            System.out.println("Exception " + e);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void servicechargeTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicechargeTextFieldKeyTyped
        // TODO add your handling code here:
        checkNumbers(evt, servicechargeTextField);
    }//GEN-LAST:event_servicechargeTextFieldKeyTyped

    private void servicechargeTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servicechargeTextFieldKeyReleased
        // TODO add your handling code here:
        try {
            if (servicechargeTextField.getText().trim().equalsIgnoreCase("")) {
                int room_charges = Integer.parseInt(roomchargeTextField.getText().trim());
                int total = room_charges + 0;
                totalTextField.setText("" + total);
                int advance_pay = Integer.parseInt(advancepaidTextField.getText().trim());
                int total_amt_to_be_paid = total - advance_pay;
                totalamtTextField.setText("" + total_amt_to_be_paid);
            } else {
                int room_charges = Integer.parseInt(roomchargeTextField.getText().trim());
                int service_charges = Integer.parseInt(servicechargeTextField.getText().trim());
                int total = room_charges + service_charges;
                totalTextField.setText("" + total);
                int advance_pay = Integer.parseInt(advancepaidTextField.getText().trim());
                int total_amt_to_be_paid = total - advance_pay;
                totalamtTextField.setText("" + total_amt_to_be_paid);
            }
        } catch (Exception e) {
            System.out.println(" " + e);
        }


    }//GEN-LAST:event_servicechargeTextFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea addTextArea;
    private javax.swing.JTextField advancepaidTextField;
    private javax.swing.JTextField genderTextField;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mobnoTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField roomchargeTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField servicechargeTextField;
    private javax.swing.JTextField totalTextField;
    private javax.swing.JTextField totalamtTextField;
    // End of variables declaration//GEN-END:variables

}
