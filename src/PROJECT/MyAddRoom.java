package PROJECT;

import com.sun.glass.events.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user1
 */
public class MyAddRoom extends javax.swing.JInternalFrame {

    private PreparedStatement pstmt;
    private ResultSet rs;
    private DefaultTableModel model = new DefaultTableModel();
    static int SUPPLIER_ID;

    public MyAddRoom() {

        initComponents();
        addRecordIntoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        rnoTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        rtypeComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        reportButton = new javax.swing.JButton();
        searchComboBox = new javax.swing.JComboBox<>();

        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(1385, 700));

        jPanel1.setBackground(new java.awt.Color(204, 153, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel2.setText("Room No");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel3.setText("Room Type");

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel6.setText("Price Per Day");

        priceTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        priceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceTextFieldKeyTyped(evt);
            }
        });

        rnoTextField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        rnoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rnoTextFieldKeyTyped(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        rtypeComboBox.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        rtypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----Select-----", "AC", "NON-AC" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(rnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(rtypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resetButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rnoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rtypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(priceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(updateButton))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(resetButton))
                .addGap(159, 159, 159))
        );

        jPanel4.setBackground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ROOM DETAIL ENTRY");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel7.setText("Search:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ROOM NO", "ROOM TYPE", "PIRCE"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        reportButton.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N
        reportButton.setText("REPORT OF LIST OF ROOMS");
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });

        searchComboBox.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-----Select-----", "AC", "NON-AC" }));
        searchComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(reportButton)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    /**
     * ******************************************************************************************
     */
    public void addRecordIntoTable() {
        pstmt = null;
        rs = null;
        try {
            String sname = searchComboBox.getSelectedItem().toString();
            if (sname.equalsIgnoreCase("-----Select-----")) {
                pstmt = MyLogin.con.prepareStatement("select * from ROOM_DETAIL", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            } else {
                pstmt = MyLogin.con.prepareStatement("select * from ROOM_DETAIL where ROOM_TYPE = ?", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                pstmt.setString(1, sname);
            }
            rs = pstmt.executeQuery();
            pstmt.clearParameters();

            DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
            while (tm.getRowCount() > 0) {
                tm.removeRow(0);
            }
            while (rs.next()) {
                Object kk[] = {rs.getInt("ROOM_NO"), rs.getString("ROOM_TYPE"), rs.getInt("PRICE")};
                tm.addRow(kk);
            }
        } catch (Exception e) {
            System.out.println(" Error in showing detail " + e);
        }
    }

    /**
     * ***************************************************************************************************
     */
    private void clearFields() {
        rnoTextField.setText("");
        rtypeComboBox.removeAllItems();
        rtypeComboBox.addItem("-----Select-----");
        rtypeComboBox.addItem("AC");
        rtypeComboBox.addItem("NON-AC");
        priceTextField.setText("");
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        String type;
        try {
            type = rtypeComboBox.getSelectedItem().toString();
            if (rnoTextField.getText().trim().equalsIgnoreCase("") || priceTextField.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "FILL ALL DETAILS CAREFULLY", "ADD RECORD", JOptionPane.ERROR_MESSAGE);
            } else if (type.equalsIgnoreCase("-----Select-----")) {
                JOptionPane.showMessageDialog(null, "SELECT ROOM TYPE", "ADD RECORD", JOptionPane.ERROR_MESSAGE);
            } else {
                //   test();            
                int r_no = Integer.parseInt(rnoTextField.getText().trim());
                if (checkId(r_no) == 1) {
                    JOptionPane.showMessageDialog(null, "ROOM NO ALREADY EXISTS", "DUPLICACY OF ROOM", JOptionPane.ERROR_MESSAGE);
                } else {
                    System.out.println("hello");
                    int price = Integer.parseInt(priceTextField.getText().trim());
                    if (price < 0) {
                        JOptionPane.showMessageDialog(null, "PRICE CANNOT BE NEGATIVE", "ADD RECORD", JOptionPane.ERROR_MESSAGE);
                    } else {
                        pstmt = MyLogin.con.prepareStatement("insert into ROOM_DETAIL (ROOM_NO,ROOM_TYPE,PRICE) values(?,?,?)", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                        pstmt.setInt(1, r_no);
                        pstmt.setString(2, type);
                        pstmt.setInt(3, price);
                        int i = pstmt.executeUpdate();
                        pstmt.clearParameters();
                        if (i > 0) {
                            JOptionPane.showMessageDialog(null, "Record Added Successfully", "Room Entry", JOptionPane.INFORMATION_MESSAGE);
                            clearFields();
                            addRecordIntoTable();
                        } else {
                            System.out.println("Problem in insertion data in ROOM_DETAIL TABLE");
                        }
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("Error " + e);
        }
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_addButtonActionPerformed

    public void test() {
        pstmt = null;
        rs = null;
        try {
            int rno = Integer.parseInt(rnoTextField.getText());
            pstmt = MyLogin.con.prepareStatement("select * from ROOM_DETAIL where ROOM_NO = ?", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            pstmt.setInt(1, rno);
            rs = pstmt.executeQuery();
            pstmt.clearParameters();
            rs.next();
        } catch (Exception e) {
            System.out.println(" Error in test " + e);
        }
    }

    /**
     * **********************************************************************
     */
    public int checkId(int id) {
        pstmt = null;
        rs = null;
        try {
            pstmt = MyLogin.con.prepareStatement("select * from ROOM_DETAIL where ROOM_NO = ?", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            pstmt.setInt(1, id);
            rs = pstmt.executeQuery();
            pstmt.clearParameters();
            if (rs.next()) {
                return 1;
            }
        } catch (Exception e) {
            System.out.println(" Error in test " + e);
        }
        return 0;
    }
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:               
        try {
            String type = rtypeComboBox.getSelectedItem().toString();
            if (!(rnoTextField.getText().trim().equalsIgnoreCase("") || priceTextField.getText().trim().equalsIgnoreCase(""))) {
                test();
                int price = Integer.parseInt(priceTextField.getText().trim());
                int rno = Integer.parseInt(rnoTextField.getText().trim());
                if ((!type.equalsIgnoreCase(rs.getString("ROOM_TYPE"))) || price != rs.getInt("PRICE")) {
                    pstmt = MyLogin.con.prepareStatement("update ROOM_DETAIL set ROOM_TYPE = ?, PRICE = ? where ROOM_NO = ?", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    pstmt.setString(1, type);
                    pstmt.setInt(2, price);
                    pstmt.setInt(3, rno);
                    int i = pstmt.executeUpdate();
                    pstmt.clearParameters();
                    if (i > 0) {
                        JOptionPane.showMessageDialog(null, "Detail Updated Successfully", "UPDATE", JOptionPane.INFORMATION_MESSAGE);
                        clearFields();
                        addRecordIntoTable();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "NO CHANGES MADE", "UPDATION CANCLED", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "NO CHANGES MADE", "UPDATION CANCLED", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println("Exception inside update button " + e);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:          
        clearFields();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportButtonActionPerformed
        // TODO add your handling code here:
        reportButton.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        try {
            GenerateReport ob = new GenerateReport();
            ob.showListOfRoomReport();
        } catch (Exception e) {
            System.out.println("exception " + e);
        }
        reportButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_reportButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:        
        try {
            int id = Integer.parseInt(rnoTextField.getText().trim());
            if (rtypeComboBox.getSelectedItem().toString().equalsIgnoreCase("-----Select-----")) {
                JOptionPane.showMessageDialog(null, "SELECT ROOM FROM TABLE TO DELETE", "ZERO ROOM SELECTED", JOptionPane.WARNING_MESSAGE);
            } else {
                int j = JOptionPane.showConfirmDialog(null, "Are you sure you want to permanently delete this record", "Delete Record", JOptionPane.CANCEL_OPTION);
                if (j == 0) {
                    pstmt = MyLogin.con.prepareStatement("delete from SUPPLIER_DETAIL where SUPPLIER_ID = ?");
                    pstmt.setInt(1, id);
                    int i = pstmt.executeUpdate();
                    pstmt.clearParameters();
                    if (i == 1) {
                        JOptionPane.showMessageDialog(null, "One record deleted Successfully", "DELETE", JOptionPane.INFORMATION_MESSAGE);
                        clearFields();
                        addRecordIntoTable();
                    } else {
                        JOptionPane.showMessageDialog(null, "Deletion Failed", "DELETE", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Deletion canceled", "DELETE", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "SELECT SUPPLIER FROM TABLE TO DELETE", "ZERO SUPPLIER SELECTED", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            System.out.println("Exception inside delete button " + e);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            int rowIndex = jTable1.getSelectedRow();
            if (rowIndex > -1) {
                rnoTextField.setText(model.getValueAt(rowIndex, 0).toString());
                // jDateChooser1.setDate(Date.valueOf(model.getValueAt(rowIndex ,2).toString().substring(0,10)));                            
                rtypeComboBox.removeAllItems();
                if (model.getValueAt(rowIndex, 1).toString().equalsIgnoreCase("AC")) {
                    rtypeComboBox.addItem("AC");
                    rtypeComboBox.addItem("NON-AC");
                } else {
                    rtypeComboBox.addItem("NON-AC");
                    rtypeComboBox.addItem("AC");
                }
                priceTextField.setText(model.getValueAt(rowIndex, 2).toString());
            }
        } catch (Exception e) {
            System.out.println("Exception " + e);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param evt
     *
     * @param
     * letters*************************************************************************************
     */
    public void checkLetters(java.awt.event.KeyEvent evt, String letters) {
        char cr = evt.getKeyChar();
        if (!((Character.isLetter(cr)) || (cr == KeyEvent.VK_BACKSPACE) || (cr == KeyEvent.VK_SPACE))) {
            getToolkit().beep();
            evt.consume();
        }
        if (letters.length() > 49) {
            getToolkit().beep();
            evt.consume();
        }
    }

    /**
     * @param evt
     * @param fieldname
     *
     *
     **************************************************************************************
     */
    public void checkNumbers(java.awt.event.KeyEvent evt, javax.swing.JTextField fieldname) {
        char cr = evt.getKeyChar();
        if (!(Character.isDigit(cr) || (cr == KeyEvent.VK_BACKSPACE) || cr == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
        if (fieldname.getText().length() > 9) {
            getToolkit().beep();
            evt.consume();
        }
    }
    private void priceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextFieldKeyTyped
        // TODO add your handling code here:
        checkNumbers(evt, priceTextField);
    }//GEN-LAST:event_priceTextFieldKeyTyped

    private void rnoTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rnoTextFieldKeyTyped
        // TODO add your handling code here:
        checkNumbers(evt, rnoTextField);
    }//GEN-LAST:event_rnoTextFieldKeyTyped

    private void searchComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchComboBoxItemStateChanged
        // TODO add your handling code here:
        addRecordIntoTable();
    }//GEN-LAST:event_searchComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JButton reportButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField rnoTextField;
    private javax.swing.JComboBox<String> rtypeComboBox;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

}
