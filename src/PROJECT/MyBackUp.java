package PROJECT;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.io.FileUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user1
 */
public class MyBackUp extends javax.swing.JInternalFrame {

    File srcDir = null;
    File destDir = null;
    String srcAdd = "", destAdd = "";

    /**
     * Creates new form ITEMS2
     */
    public MyBackUp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        selectpathCheckBox = new javax.swing.JCheckBox();
        srcpathTextField = new javax.swing.JTextField();
        srcdirButton = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        destpathTextField = new javax.swing.JTextField();
        destdirButton = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        backupButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BACK-UP");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 153, 255));

        selectpathCheckBox.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        selectpathCheckBox.setText("PreDefined Source Directory");
        selectpathCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectpathCheckBoxItemStateChanged(evt);
            }
        });

        srcpathTextField.setEditable(false);
        srcpathTextField.setBackground(new java.awt.Color(255, 255, 255));
        srcpathTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        srcpathTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 1, true));
        srcpathTextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        srcpathTextField.setEnabled(false);

        srcdirButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        srcdirButton.setText("Source Folder");
        srcdirButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        srcdirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcdirButtonActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel30.setText("( Choose The Directry  you want to copy with subDirectries and Files )");

        destpathTextField.setEditable(false);
        destpathTextField.setBackground(new java.awt.Color(255, 255, 255));
        destpathTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        destpathTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255), 1, true));
        destpathTextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        destpathTextField.setEnabled(false);
        destpathTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destpathTextFieldActionPerformed(evt);
            }
        });

        destdirButton.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        destdirButton.setText("Destination Folder");
        destdirButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        destdirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destdirButtonActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Arial", 2, 14)); // NOI18N
        jLabel32.setText("( Select The Directry where you want copy the Directry  )");

        backupButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        backupButton.setText("BackUp");
        backupButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backupButton.setMaximumSize(new java.awt.Dimension(35, 10));
        backupButton.setMinimumSize(new java.awt.Dimension(35, 10));
        backupButton.setPreferredSize(new java.awt.Dimension(35, 10));
        backupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectpathCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(srcpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(destpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(94, 94, 94)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(destdirButton)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(srcdirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(selectpathCheckBox)
                .addGap(139, 139, 139)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srcpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srcdirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel30)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destdirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destpathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(backupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectpathCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectpathCheckBoxItemStateChanged
        try {
            if (selectpathCheckBox.isSelected() == true) {
                srcdirButton.setEnabled(false);
                srcDir = new File(".\\test");
                srcAdd = ".\\test";
                srcpathTextField.setText("   Default directory selected ");
                //              srcpathTextField.setBackground(new Color(240,240,240));
                destpathTextField.setText("");
            } else {
                srcAdd = null;
                srcpathTextField.setText(" ---------- Empty ---------- ");
                srcdirButton.setEnabled(true);
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_selectpathCheckBoxItemStateChanged

    private void srcdirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcdirButtonActionPerformed
        try {
            JFileChooser chooser = null;
            chooser = new JFileChooser();
            chooser.setDialogTitle("Destnation Dir");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setCurrentDirectory(new File("."));

            int result = chooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                srcAdd = chooser.getSelectedFile().getAbsolutePath();
                srcDir = new File(srcAdd);
                srcpathTextField.setText(srcAdd);
            }
        } catch (Exception e) {
            System.out.println("Problem inside source Directory Button " + e);
        }
    }//GEN-LAST:event_srcdirButtonActionPerformed

    private void destpathTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destpathTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destpathTextFieldActionPerformed

    private void destdirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destdirButtonActionPerformed
        try {
            JFileChooser chooser = null;
            chooser = new JFileChooser();
            chooser.setDialogTitle("Destnation Dir");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setCurrentDirectory(new File("."));

            int result = chooser.showOpenDialog(null);

            if (result == JFileChooser.APPROVE_OPTION) {
                destAdd = chooser.getSelectedFile().getAbsolutePath();
                destDir = null;
                destDir = new File(destAdd);
                destpathTextField.setText(destAdd);
            }
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_destdirButtonActionPerformed

    private void backupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupButtonActionPerformed

        if ("".equals(srcpathTextField.getText().trim()) || srcAdd == null) {
            JOptionPane.showMessageDialog(null, "Choose the Source Directry");
            srcdirButton.requestFocusInWindow();
        } else if ("".equals(destpathTextField.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Choose the Destination Directry");
            destdirButton.requestFocusInWindow();
        } else if ((srcpathTextField.getText().trim()).equals(destpathTextField.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Source and Destination Directries are same");
            srcdirButton.requestFocusInWindow();
        } else {
            try {
                int z = JOptionPane.showConfirmDialog(null, "Are you sure you want to take backup of these records along with images", "Backup Record", JOptionPane.OK_OPTION);
                if (z == 0) {
                    File checkDir = new File(destAdd + "/BACKUP");
                    boolean exists = checkDir.exists();
                    if (exists) {
                        JOptionPane.showMessageDialog(null, "BACKUP DIRECTORY(FOLDER) ALREADY EXISTS \n Backup can't be completed to the destination directory \n\n Please select other directory to take backup ", "BACKUP", JOptionPane.ERROR_MESSAGE);
                    } else {
                        File dir = new File(destAdd + "/BACKUP");
                        Boolean successfull = dir.mkdir();
                        if (successfull) {
                            JOptionPane.showMessageDialog(null, "BACKUP directory created", "CREATE DIRECTORY", JOptionPane.INFORMATION_MESSAGE);

                            destDir = null;
                            destDir = new File(destAdd + "/BACKUP");

                            FileUtils.copyDirectory(srcDir, destDir);  // for this we need to include conmmons-io-2.4.jar only
                            JOptionPane.showMessageDialog(null, "Backup Completed \n Check Backup : " + destpathTextField.getText().trim(), "BACKUP", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "Backup Failed", "BACKUP", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Backup Cancled", "BACKUP", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println("Error inside BackUp button " + e);
                JOptionPane.showMessageDialog(null, "Backup Failed", "BACKUP", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_backupButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backupButton;
    private javax.swing.JButton destdirButton;
    private javax.swing.JTextField destpathTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JCheckBox selectpathCheckBox;
    private javax.swing.JButton srcdirButton;
    private javax.swing.JTextField srcpathTextField;
    // End of variables declaration//GEN-END:variables

}
